From ac8c37220993ce5f819a979d20b705695e3cf5e7 Mon Sep 17 00:00:00 2001
From: weritos6666 <weritos94@gmail.com>
Date: Mon, 28 Mar 2016 13:31:05 +0500
Subject: [PATCH] Fix_WIFI_LG_L7_II

---
 include/hardware_legacy/AudioSystemLegacy.h | 56 ++++-------------------------
 wifi/Android.mk                             | 10 ++++++
 wifi/wifi.c                                 | 36 +++++++++++++++++++
 3 files changed, 52 insertions(+), 50 deletions(-)

diff --git a/include/hardware_legacy/AudioSystemLegacy.h b/include/hardware_legacy/AudioSystemLegacy.h
index f62a333..6296b8b 100644
--- a/include/hardware_legacy/AudioSystemLegacy.h
+++ b/include/hardware_legacy/AudioSystemLegacy.h
@@ -1,6 +1,5 @@
 /*
  * Copyright (C) 2008 The Android Open Source Project
- * Copyright (c) 2011-2013, The Linux Foundation. All rights reserved.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -62,18 +61,14 @@ enum audio_source {
     AUDIO_SOURCE_CAMCORDER = 5,
     AUDIO_SOURCE_VOICE_RECOGNITION = 6,
     AUDIO_SOURCE_VOICE_COMMUNICATION = 7,
-#ifdef LEGACY_ALSA_AUDIO
-    AUDIO_SOURCE_REMOTE_SUBMIX = 8,
-    AUDIO_SOURCE_MAX = AUDIO_SOURCE_REMOTE_SUBMIX,
-#else
     AUDIO_SOURCE_MAX = AUDIO_SOURCE_VOICE_COMMUNICATION,
-#endif
 
     AUDIO_SOURCE_LIST_END  // must be last - used to validate audio source type
 };
 
 class AudioSystem {
 public:
+#if 1
     enum stream_type {
         DEFAULT          =-1,
         VOICE_CALL       = 0,
@@ -86,9 +81,6 @@ public:
         ENFORCED_AUDIBLE = 7, // Sounds that cannot be muted by user and must be routed to speaker
         DTMF             = 8,
         TTS              = 9,
-#ifdef LEGACY_ALSA_AUDIO
-        INCALL_MUSIC     = 10,
-#endif
         NUM_STREAM_TYPES
     };
 
@@ -251,51 +243,17 @@ public:
         DEVICE_OUT_AUX_DIGITAL = 0x400,
         DEVICE_OUT_ANLG_DOCK_HEADSET = 0x800,
         DEVICE_OUT_DGTL_DOCK_HEADSET = 0x1000,
-#ifdef LEGACY_ALSA_AUDIO
-        DEVICE_OUT_USB_ACCESSORY = 0x2000,
-        DEVICE_OUT_USB_DEVICE = 0x4000,
-        DEVICE_OUT_FM = 0x10000,
-        DEVICE_OUT_ANC_HEADSET = 0x20000,
-        DEVICE_OUT_ANC_HEADPHONE = 0x40000,
-        DEVICE_OUT_PROXY = 0x80000,
-        DEVICE_OUT_DEFAULT = DEVICE_OUT_SPEAKER,
-#else
         DEVICE_OUT_DEFAULT = 0x8000,
-#endif
         DEVICE_OUT_ALL = (DEVICE_OUT_EARPIECE | DEVICE_OUT_SPEAKER | DEVICE_OUT_WIRED_HEADSET |
                 DEVICE_OUT_WIRED_HEADPHONE | DEVICE_OUT_BLUETOOTH_SCO | DEVICE_OUT_BLUETOOTH_SCO_HEADSET |
                 DEVICE_OUT_BLUETOOTH_SCO_CARKIT | DEVICE_OUT_BLUETOOTH_A2DP | DEVICE_OUT_BLUETOOTH_A2DP_HEADPHONES |
                 DEVICE_OUT_BLUETOOTH_A2DP_SPEAKER | DEVICE_OUT_AUX_DIGITAL |
                 DEVICE_OUT_ANLG_DOCK_HEADSET | DEVICE_OUT_DGTL_DOCK_HEADSET |
-#ifdef LEGACY_ALSA_AUDIO
-                DEVICE_OUT_USB_ACCESSORY | DEVICE_OUT_USB_DEVICE |
-                DEVICE_OUT_ANC_HEADSET | DEVICE_OUT_ANC_HEADPHONE |
-                DEVICE_OUT_FM | DEVICE_OUT_PROXY | DEVICE_OUT_DEFAULT),
-#else
                 DEVICE_OUT_DEFAULT),
-#endif
         DEVICE_OUT_ALL_A2DP = (DEVICE_OUT_BLUETOOTH_A2DP | DEVICE_OUT_BLUETOOTH_A2DP_HEADPHONES |
                 DEVICE_OUT_BLUETOOTH_A2DP_SPEAKER),
-#ifdef LEGACY_ALSA_AUDIO
-        DEVICE_OUT_ALL_USB = (DEVICE_OUT_USB_ACCESSORY | DEVICE_OUT_USB_DEVICE),
-#endif
 
         // input devices
-#ifdef LEGACY_ALSA_AUDIO
-        DEVICE_IN_COMMUNICATION = 0x100000,
-        DEVICE_IN_AMBIENT = 0x200000,
-        DEVICE_IN_BUILTIN_MIC = 0x400000,
-        DEVICE_IN_BLUETOOTH_SCO_HEADSET = 0x800000,
-        DEVICE_IN_WIRED_HEADSET = 0x1000000,
-        DEVICE_IN_AUX_DIGITAL = 0x2000000,
-        DEVICE_IN_VOICE_CALL = 0x4000000,
-        DEVICE_IN_BACK_MIC = 0x8000000,
-        DEVICE_IN_ANC_HEADSET = 0x10000000,
-        DEVICE_IN_FM_TUNER = 0x20000000,
-        DEVICE_IN_DEFAULT = DEVICE_IN_BUILTIN_MIC,
-        DEVICE_IN_ANLG_DOCK_HEADSET = 0x80000000,
-        DEVICE_IN_PROXY = DEVICE_IN_ANLG_DOCK_HEADSET,
-#else
         DEVICE_IN_COMMUNICATION = 0x10000,
         DEVICE_IN_AMBIENT = 0x20000,
         DEVICE_IN_BUILTIN_MIC = 0x40000,
@@ -305,17 +263,10 @@ public:
         DEVICE_IN_VOICE_CALL = 0x400000,
         DEVICE_IN_BACK_MIC = 0x800000,
         DEVICE_IN_DEFAULT = 0x80000000,
-#endif
 
         DEVICE_IN_ALL = (DEVICE_IN_COMMUNICATION | DEVICE_IN_AMBIENT | DEVICE_IN_BUILTIN_MIC |
                 DEVICE_IN_BLUETOOTH_SCO_HEADSET | DEVICE_IN_WIRED_HEADSET | DEVICE_IN_AUX_DIGITAL |
-#ifdef LEGACY_ALSA_AUDIO
-                DEVICE_IN_VOICE_CALL | DEVICE_IN_BACK_MIC | DEVICE_IN_ANC_HEADSET |
-                DEVICE_IN_FM_TUNER | DEVICE_IN_DEFAULT |
-                DEVICE_IN_ANLG_DOCK_HEADSET | DEVICE_IN_PROXY)
-#else
                 DEVICE_IN_VOICE_CALL | DEVICE_IN_BACK_MIC | DEVICE_IN_DEFAULT)
-#endif
     };
 
     // request to open a direct output with getOutput() (by opposition to sharing an output with other AudioTracks)
@@ -363,10 +314,13 @@ public:
         NUM_DEVICE_STATES
     };
 
+#endif
+
     static uint32_t popCount(uint32_t u) {
         return popcount(u);
     }
 
+#if 1
     static bool isOutputDevice(audio_devices device) {
         if ((popcount(device) == 1) && ((device & ~DEVICE_OUT_ALL) == 0))
              return true;
@@ -400,6 +354,8 @@ public:
     static bool isInputChannel(uint32_t channel) {
         return audio_is_input_channel(channel);
     }
+
+#endif
 };
 
 };  // namespace android
diff --git a/wifi/Android.mk b/wifi/Android.mk
index 7fa595c..a94bb6c 100644
--- a/wifi/Android.mk
+++ b/wifi/Android.mk
@@ -57,6 +57,16 @@ ifdef WIFI_FST_DRIVER_MODULE_NAME
 LOCAL_CFLAGS += -DWIFI_FST_DRIVER_MODULE_NAME=\"$(WIFI_FST_DRIVER_MODULE_NAME)\"
 endif
 
+ifdef WIFI_CFG80211_MODULE_PATH
+LOCAL_CFLAGS += -DWIFI_CFG80211_MODULE_PATH=\"$(WIFI_CFG80211_MODULE_PATH)\"
+endif
+ifdef WIFI_CFG80211_MODULE_ARG
+LOCAL_CFLAGS += -DWIFI_CFG80211_MODULE_ARG=\"$(WIFI_CFG80211_MODULE_ARG)\"
+endif
+ifdef WIFI_CFG80211_MODULE_NAME
+LOCAL_CFLAGS += -DWIFI_CFG80211_MODULE_NAME=\"$(WIFI_CFG80211_MODULE_NAME)\"
+endif
+
 LOCAL_SRC_FILES += wifi/wifi.c wifi/wifi_fst.c
 
 ifdef WPA_SUPPLICANT_VERSION
diff --git a/wifi/wifi.c b/wifi/wifi.c
index 6f7e105..cfa7191 100644
--- a/wifi/wifi.c
+++ b/wifi/wifi.c
@@ -127,6 +127,26 @@ static const char EXT_MODULE_ARG[] = "";
 static const char EXT_MODULE_PATH[] = WIFI_EXT_MODULE_PATH;
 #endif
 
+/*
+ * @neutrondev => this is how LG loads WI-FI on stock Firmware for LII series
+*/
+
+#ifdef WIFI_CFG80211_MODULE_NAME
+static const char CFG80211_MODULE_NAME[] = WIFI_CFG80211_MODULE_NAME;
+#ifdef WIFI_CFG80211_MODULE_ARG
+static const char CFG80211_MODULE_ARG[] = WIFI_CFG80211_MODULE_ARG;
+#else
+static const char CFG80211_MODULE_ARG[] = "";
+#endif
+#endif
+#ifdef WIFI_CFG80211_MODULE_PATH
+static const char CFG80211_MODULE_PATH[] = WIFI_CFG80211_MODULE_PATH;
+#endif
+
+/*
+ * @neutrondev => this is how LG loads WI-FI on stock Firmware for LII series
+*/
+
 #ifndef WIFI_DRIVER_FW_PATH_PARAM
 #define WIFI_DRIVER_FW_PATH_PARAM	"/sys/module/wlan/parameters/fwpath"
 #endif
@@ -338,6 +358,12 @@ int wifi_load_driver()
 
     property_set(DRIVER_PROP_NAME, "loading");
 
+#ifdef WIFI_CFG80211_MODULE_PATH
+    if (insmod(CFG80211_MODULE_PATH, CFG80211_MODULE_ARG) < 0)
+        return -1;
+    usleep(200000);
+#endif
+
 #ifdef WIFI_EXT_MODULE_PATH
     if (insmod(EXT_MODULE_PATH, EXT_MODULE_ARG) < 0)
         return -1;
@@ -350,6 +376,11 @@ int wifi_load_driver()
 #ifdef WIFI_EXT_MODULE_NAME
         rmmod(EXT_MODULE_NAME);
 #endif
+
+#ifdef WIFI_CFG80211_MODULE_NAME
+        rmmod(CFG80211_MODULE_NAME);
+#endif
+
         return -1;
     }
 
@@ -408,6 +439,11 @@ int wifi_unload_driver()
 #ifdef WIFI_EXT_MODULE_NAME
             if (rmmod(EXT_MODULE_NAME) == 0)
 #endif
+
+#ifdef WIFI_CFG80211_MODULE_NAME
+			if (rmmod(CFG80211_MODULE_NAME) == 0)
+#endif
+
             return 0;
         }
         return -1;
-- 
1.9.1

